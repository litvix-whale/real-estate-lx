@using System.Security.Claims
@model PostsListViewModel

@{
    ViewData["Title"] = "Posts By Topic";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-md-10 col-lg-8">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                        Sort by
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <li><a class="dropdown-item" asp-controller="Topic" asp-action="Posts" asp-route-topicId=@ViewBag.TopicId asp-route-sortBy="titlea">Title Ascending</a></li>
                        <li><a class="dropdown-item" asp-controller="Topic" asp-action="Posts" asp-route-topicId=@ViewBag.TopicId asp-route-sortBy="titled">Title Descending</a></li>
                        <li><a class="dropdown-item" asp-controller="Topic" asp-action="Posts" asp-route-topicId=@ViewBag.TopicId asp-route-sortBy="newest">Newest</a></li>
                        <li><a class="dropdown-item" asp-controller="Topic" asp-action="Posts" asp-route-topicId=@ViewBag.TopicId asp-route-sortBy="oldest">Oldest</a></li>
                    </ul>
                </div>
                <input type="text" id="searchInput" class="form-control" style="max-width: 70%;" placeholder="Search" aria-label="Search">
                @if (User.Identity != null && User.Identity.IsAuthenticated && ViewBag.BannedTo == null)
                {
                    <a asp-controller="Post" asp-action="Add" asp-route-topicId="@Model.TopicId" class="btn btn-outline-light btn-sm">
                        <i class="bi bi-plus-circle me-1"></i> Add Post
                    </a>
                }
            </div>

            @for (int i = 0; i < Model.Posts.Count; i++)
            {   
                <div class="card mb-4 shadow-sm bg-dark text-light border-secondary">
                        <div class="card-header text-white d-flex justify-content-between align-items-center" style="border-top-left-radius: 1rem; border-top-right-radius: 1rem;">
                            <div>
                                <h2 class="h4 mb-0">
                                    <a asp-controller="Post" asp-action="Details" asp-route-id="@Model.Posts[i].Id" class="text-decoration-none text-light">
                                    @Model.Posts[i].Title
                                    </a>
                                </h2>
                                <div class="d-flex align-items-center mt-2">
                                    <small class="text-muted">
                                        <i class="bi bi-calendar me-1"></i> @Model.Posts[i].CreatedAt.ToString("MMM dd, yyyy")
                                    </small>
                                    <small class="text-muted ms-2">
                                        <i class="bi bi-arrow-up-circle me-1"></i> @(Model.Posts[i].Rating)
                                    </small>
                                </div>
                            </div>
                            @if (User.Identity != null && User.Identity.IsAuthenticated)
                            {
                                var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);  
                                
                                if (User.IsInRole("Admin") || userId == Model.Posts[i].UserId.ToString())
                                {
                                    <button type="button" class="border-0 bg-transparent p-2 text-danger delete-btn"
                                        data-post-title="@Model.Posts[i].Title">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                }
                            }
                            
                        </div>
                        <div class="card-body p-4">
                            <p>@Model.Posts[i].Text</p>
                        </div>
                </div>
            }

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        @if (Model.PageNumber > 1)
                        {
                            <li class="page-item">
                                <a class="page-link bg-dark text-light border-secondary" 
                                asp-action="Posts" 
                                asp-route-topicId="@Model.TopicId"
                                asp-route-page="@(Model.PageNumber - 1)">
                                    Previous
                                </a>
                            </li>
                        }
                        
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link @(i == Model.PageNumber ? "bg-grey text-white" : "bg-dark text-light") border-secondary" 
                                asp-action="Posts" 
                                asp-route-topicId="@Model.TopicId"
                                asp-route-page="@i">
                                    @i
                                </a>
                            </li>
                        }
                        
                        @if (Model.PageNumber < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link bg-dark text-light border-secondary" 
                                asp-action="Posts" 
                                asp-route-topicId="@Model.TopicId"
                                asp-route-page="@(Model.PageNumber + 1)">
                                    Next
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
            
        </div>
    </div>
</div>

<script>
    document.getElementById('searchInput').addEventListener('input', function () {
        let searchQuery = this.value.toLowerCase();
        let posts = document.querySelectorAll('.card');

        posts.forEach(post => {
            let title = post.querySelector('h2').innerText.toLowerCase();
            let content = post.querySelector('.card-body p').innerText.toLowerCase();

            if (title.includes(searchQuery) || content.includes(searchQuery)) {
                post.style.display = 'block';
            } else {
                post.style.display = 'none';
            }
        });
    });
</script>
