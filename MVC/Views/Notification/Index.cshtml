@using Core.Interfaces
@inject ICategoryService _categoryService
@model NotificationsViewModel

@{
    ViewData["Title"] = "Notifications";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6">
            <div class="card">
                <div class="card-header text-white" style="border-top-left-radius: 1rem; border-top-right-radius: 1rem;">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2 class="h4 mb-0">Notifications</h2>
                        @if (Model.UnreadCount > 0)
                        {
                            <form asp-action="MarkAllAsRead" method="post">
                                <button type="submit" class="btn btn-dark">
                                    <i class="bi bi-check-all me-1"></i>Mark All as Read
                                </button>
                            </form>
                        }
                    </div>
                </div>
                <div class="card-body p-4">
                    @if (Model.Notifications.Any())
                    {
                        <ul class="list-group">
                            @foreach (var notification in Model.Notifications)
                            {
                                <li class="list-group-item @(notification.IsRead ? "" : "list-group-item-primary")">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <p class="mb-1">@notification.Message</p>
                                            <small class="text-muted">@notification.CreatedAt.ToString("g")</small>
                                        </div>
                                        <div class="d-flex">
                                            @if (!notification.IsRead)
                                            {
                                                <form asp-action="MarkAsRead" method="post" class="me-2">
                                                    <input type="hidden" name="id" value="@notification.Id" />
                                                    <button type="submit" class="btn btn-sm btn-outline-primary">
                                                        <i class="bi bi-check"></i>
                                                    </button>
                                                </form>
                                            }
                                            @if (notification.PostId.HasValue)
                                            {
                                                <form asp-action="NavigateToPost" method="post" class="me-2">
                                                    <input type="hidden" name="notificationId" value="@notification.Id" />
                                                    <input type="hidden" name="postId" value="@notification.PostId" />
                                                    <button type="submit" class="btn btn-sm btn-outline-secondary">
                                                        <i class="bi bi-arrow-right"></i> View Post
                                                    </button>
                                                </form>
                                            }
                                            @* Check if this is a topic request notification and user is admin *@
                                            @if (User.IsInRole("Admin") && notification.Message.Contains("asked for topic"))
                                            {
                                                @* Extract the topic name from the notification message *@
                                                string topicName = "";
                                                int startIndex = notification.Message.IndexOf("'");
                                                int endIndex = notification.Message.LastIndexOf("'");
                                                
                                                if (startIndex != -1 && endIndex != -1 && endIndex > startIndex)
                                                {
                                                    topicName = notification.Message.Substring(startIndex + 1, endIndex - startIndex - 1);
                                                }
                                                
                                                @if (!string.IsNullOrEmpty(topicName))
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-success me-2" 
                                                            data-bs-toggle="modal" data-bs-target="#addTopicFromNotificationModal"
                                                            data-topic-name="@topicName">
                                                        <i class="bi bi-plus-circle"></i> Add Topic
                                                    </button>
                                                }
                                            }
                                            <form asp-action="Delete" method="post">
                                                <input type="hidden" name="id" value="@notification.Id" />
                                                <button type="submit" class="btn btn-sm btn-outline-danger">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-bell-slash fs-1 text-muted"></i>
                            <p class="mt-3 text-muted">You don't have any notifications.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (User.IsInRole("Admin"))
{
    <!-- Add Topic From Notification Modal -->
    <div class="modal fade" id="addTopicFromNotificationModal" tabindex="-1" aria-labelledby="addTopicFromNotificationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content bg-dark text-white">
                <div class="modal-header border-bottom border-secondary">
                    <h5 class="modal-title" id="addTopicFromNotificationModalLabel">Add New Topic</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4 bg-dark">
                    <form asp-controller="Topic" asp-action="Add" method="post" id="addTopicFromNotificationForm">
                        <div class="mb-4">
                            <label for="notificationTopicName" class="form-label text-light">Topic Name</label>
                            <div class="input-group">
                                <span class="input-group-text bg-secondary border-secondary text-light"><i class="bi bi-pencil"></i></span>
                                <input name="topicName" class="form-control bg-dark text-light border-secondary" id="notificationTopicName" />
                            </div>
                            <label for="notificationCategoryName" class="form-label text-light mt-3">Category</label>
                            <div class="input-group">
                                <span class="input-group-text bg-secondary border-secondary text-light"><i class="bi bi-tag"></i></span>
                                <select name="categoryName" class="form-select bg-dark text-light border-secondary" id="notificationCategoryName">
                                    <option value="" selected>Uncategorized</option>
                                    @foreach (var category in await _categoryService.GetAllCategoriesAsync())
                                    {
                                        <option value="@category.Name">@category.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary w-100 mb-0">
                            <i class="bi bi-plus-circle me-2"></i>Add Topic
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            // Handle the add topic from notification modal
            document.addEventListener('DOMContentLoaded', function() {
                const addTopicModal = document.getElementById('addTopicFromNotificationModal');
                
                if (addTopicModal) {
                    addTopicModal.addEventListener('show.bs.modal', function(event) {
                        const button = event.relatedTarget;
                        const topicName = button.getAttribute('data-topic-name');
                        const modal = this;
                        
                        // Set the topic name in the input field
                        modal.querySelector('#notificationTopicName').value = topicName;
                        
                        // Reset the form when modal is hidden
                        modal.addEventListener('hidden.bs.modal', function() {
                            modal.querySelector('#addTopicFromNotificationForm').reset();
                        });
                    });
                }
            });
        </script>
    }
}