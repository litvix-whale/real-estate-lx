@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Core.Entities.RealEstate

@{
    ViewData["Title"] = Model.Title;
}

<div class="container py-4">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index">Real Estate</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Title</li>
        </ol>
    </nav>

    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Title and Location -->
            <div class="mb-4">
                <h2 class="mb-2">@Model.Title</h2>
                <p class="text-muted mb-0">
                    <i class="bi bi-geo-alt me-1"></i>
                    @Model.Street, @Model.Locality, @Model.Region, @Model.Country
                </p>
                <div class="mt-2">
                    @if (Model.IsNewBuilding)
                    {
                        <span class="badge bg-success me-2">New Building</span>
                    }
                    <span class="badge bg-primary me-2">@Model.Deal</span>
                    <span class="badge bg-secondary">@Model.RealtyType</span>
                </div>
            </div>

            <!-- Images -->
            @if (Model.Images.Any())
            {
                <div class="mb-4">
                    @if (Model.Images.Count() == 1)
                    {
                        <img src="@Model.Images.First().Url"
                             class="img-fluid rounded shadow" alt="@Model.Title">
                    }
                    else
                    {
                        <!-- Image Carousel -->
                        <div id="propertyCarousel" class="carousel slide shadow rounded overflow-hidden" data-bs-ride="carousel">
                            <div class="carousel-indicators">
                                @for (int i = 0; i < Model.Images.Count(); i++)
                                {
                                    <button type="button" data-bs-target="#propertyCarousel" data-bs-slide-to="@i"
                                            class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")"
                                            aria-label="Slide @(i + 1)"></button>
                                }
                            </div>
                            <div class="carousel-inner">
                                @{
                                    int index = 0;
                                }
                                @foreach (var image in Model.Images.OrderBy(i => i.UiPriority))
                                {
                                    <div class="carousel-item @(index == 0 ? "active" : "")">
                                        <img src="@image.Url" class="d-block w-100" alt="@Model.Title" style="height: 400px; object-fit: cover;">
                                    </div>
                                    index++;
                                }
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#propertyCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#propertyCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="mb-4 text-center py-5 bg-light rounded">
                    <i class="bi bi-image text-muted" style="font-size: 4rem;"></i>
                    <p class="text-muted mt-2">No images available</p>
                </div>
            }

            <!-- Description -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-card-text me-2"></i>Description</h5>
                </div>
                <div class="card-body">
                    <p class="mb-0">@Model.Description</p>
                </div>
            </div>

            <!-- Location Map Placeholder -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-map me-2"></i>Location</h5>
                </div>
                <div class="card-body">
                    <div class="bg-light rounded p-4 text-center">
                        <i class="bi bi-geo-alt text-muted" style="font-size: 2rem;"></i>
                        <p class="mb-0 mt-2">
                            @Model.Street, @Model.Borough<br>
                            @Model.Locality, @Model.Region<br>
                            @Model.Country
                        </p>
                        @if (Model.Latitude.HasValue && Model.Longitude.HasValue)
                        {
                            <small class="text-muted">
                                Coordinates: @Model.Latitude.Value.ToString("F6"), @Model.Longitude.Value.ToString("F6")
                            </small>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Price and Main Info -->
            <div class="card mb-4 border-primary">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="bi bi-info-circle me-2"></i>Property Information</h5>
                </div>
                <div class="card-body">
                    <div class="text-center mb-3">
                        <h3 class="text-primary mb-0">@Model.Price.ToString("N0") @Model.Currency</h3>
                        <small class="text-muted">@Model.Deal.ToString().ToLower()</small>
                    </div>

                    <hr>

                    <div class="row text-center mb-3">
                        <div class="col-4">
                            <div class="border-end">
                                <i class="bi bi-door-open text-primary d-block mb-1"></i>
                                <small class="text-muted">Rooms</small>
                                <div class="fw-bold">@Model.RoomCount</div>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="border-end">
                                <i class="bi bi-arrows-angle-expand text-primary d-block mb-1"></i>
                                <small class="text-muted">Area</small>
                                <div class="fw-bold">@Model.AreaTotal m²</div>
                            </div>
                        </div>
                        <div class="col-4">
                            <i class="bi bi-building text-primary d-block mb-1"></i>
                            <small class="text-muted">Floor</small>
                            <div class="fw-bold">@Model.Floor/@Model.TotalFloors</div>
                        </div>
                    </div>

                    <hr>

                    <div class="details-list">
                        <div class="row mb-2">
                            <div class="col-6"><strong>Category:</strong></div>
                            <div class="col-6">@Model.Category</div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-6"><strong>Property Type:</strong></div>
                            <div class="col-6">@Model.RealtyType</div>
                        </div>
                        @if (Model.AreaLiving.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>Living Area:</strong></div>
                                <div class="col-6">@Model.AreaLiving.Value m²</div>
                            </div>
                        }
                        @if (Model.AreaKitchen.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>Kitchen Area:</strong></div>
                                <div class="col-6">@Model.AreaKitchen.Value m²</div>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.NewBuildingName))
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>Building:</strong></div>
                                <div class="col-6">@Model.NewBuildingName</div>
                            </div>
                        }
                        <div class="row mb-2">
                            <div class="col-6"><strong>Posted:</strong></div>
                            <div class="col-6">@Model.CreatedAt.ToString("MMM dd, yyyy")</div>
                        </div>
                        @if (Model.UpdatedAt.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-6"><strong>Updated:</strong></div>
                                <div class="col-6">@Model.UpdatedAt.Value.ToString("MMM dd, yyyy")</div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Contact Information -->
            @if (Model.User != null)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="bi bi-person me-2"></i>Posted by</h6>
                    </div>
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <img src="~/images/avatars/@Model.User.ProfilePicture"
                                 class="rounded-circle me-3"
                                 alt="@Model.User.UserName"
                                 style="width: 50px; height: 50px; object-fit: cover;">
                            <div>
                                <h6 class="mb-0">@Model.User.UserName</h6>
                                <small class="text-muted">Member since @Model.User.CreatedAt.ToString("MMM yyyy")</small>
                            </div>
                        </div>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="mt-3 d-grid">
                                <button class="btn btn-primary" onclick="alert('Contact functionality not implemented')">
                                    <i class="bi bi-envelope me-2"></i>Contact Seller
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="mt-3 d-grid">
                                <a asp-controller="User" asp-action="Login" class="btn btn-outline-primary">
                                    <i class="bi bi-box-arrow-in-right me-2"></i>Login to Contact
                                </a>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Actions for Owner -->
            @if (User.Identity.IsAuthenticated && Model.User?.UserName == User.Identity.Name)
            {
                <div class="card border-warning">
                    <div class="card-header bg-warning text-dark">
                        <h6 class="mb-0"><i class="bi bi-tools me-2"></i>Manage Property</h6>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                                <i class="bi bi-pencil me-2"></i>Edit Property
                            </a>
                            <button class="btn btn-danger" onclick="confirmDelete('@Model.Id')">
                                <i class="bi bi-trash me-2"></i>Delete Property
                            </button>
                        </div>
                    </div>
                </div>
            }

            <!-- Back to Search -->
            <div class="mt-4 d-grid">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left me-2"></i>Back to Search
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(id) {
            if (confirm('Are you sure you want to delete this property?')) {
                var form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("Delete", "RealEstate")';

                var input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'id';
                input.value = id;

                form.appendChild(input);
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}